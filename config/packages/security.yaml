security:
    encoders:
        App\Entity\Users:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Users
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\UsersAuthentificatorAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # Dans la partie access_control nous définissons les routes protégées
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/forum/user, roles: ROLE_USER }

    # La partie role_hierarchy contient la hiérarchie des rôles
    # Un éditeur sera également utilisateur
    # Un administrateur sera également éditeur et donc utilisateur
    # Nous attribuons les rôles aux utilisateurs après leur inscription. 
    # Nous partirons du principe que seuls les administrateurs pourront modifier ces rôles.
    # le 1er administrateur doit être configuré dans la base de données.
    role_hierarchy:
        ROLE_EDITOR: ROLE_USER
        ROLE_ADMIN: ROLE_EDITOR